definitions:
  AttendanceRulesResponse:
    properties:
      can_check_in:
        type: boolean
      can_check_out:
        type: boolean
      current_time:
        type: string
      message:
        type: string
      safe_areas:
        items:
          $ref: '#/definitions/SafeAreaDTO'
        type: array
      settings:
        $ref: '#/definitions/AttendanceSettingsDTO'
      status:
        description: '"before_checkin", "checkin_time", "between", "checkout_time",
          "after_checkout"'
        type: string
    type: object
  AttendanceSettingsDTO:
    properties:
      check_in_end:
        description: '"08:00"'
        type: string
      check_in_start:
        description: '"07:00"'
        type: string
      check_out_end:
        description: '"17:00"'
        type: string
      check_out_start:
        description: '"15:00"'
        type: string
      late_tolerance:
        description: minutes
        type: integer
      max_distance:
        description: meters
        type: integer
      require_location:
        type: boolean
      require_photo:
        type: boolean
    type: object
  AttendanceSummary:
    properties:
      absent_days:
        type: integer
      attendance_rate:
        type: number
      current_month:
        type: string
      late_days:
        type: integer
      present_days:
        type: integer
      total_days:
        type: integer
    type: object
  BadRequestAPIResponse:
    properties:
      data: {}
      meta:
        properties:
          message:
            example: Bad request
            type: string
          status:
            example: 400
            type: integer
        type: object
    type: object
  InternalServerErrorAPIResponse:
    properties:
      meta:
        properties:
          message:
            example: Internal server error
            type: string
          status:
            example: 500
            type: integer
        type: object
    type: object
  LoginRequest:
    properties:
      deviceinfo:
        example: postmanstudent123x0==
        type: string
      nisn:
        example: "2024000579"
        type: string
      password:
        example: password123
        type: string
    required:
    - nisn
    - password
    type: object
  LoginSuccessResponse:
    properties:
      data:
        properties:
          access_token:
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            type: string
          created_at:
            example: "0001-01-01T00:00:00Z"
            type: string
          device_info:
            example: postmanstudent123x0==
            type: string
          last_activity:
            example: "0001-01-01T00:00:00Z"
            type: string
          name:
            example: Eko Saputra
            type: string
          nisn:
            example: "2024000579"
            type: string
          session_id:
            example: b5e882d0eb21c5ba7752d2b8f216ccad
            type: string
          user_id:
            example: 003061ee-97ff-4d00-8155-f4bf15e319dd
            type: string
        type: object
      meta:
        properties:
          message:
            example: login success
            type: string
          status:
            example: 200
            type: integer
        type: object
    type: object
  NotFoundAPIResponse:
    properties:
      meta:
        properties:
          message:
            example: Resource not found
            type: string
          status:
            example: 404
            type: integer
        type: object
    type: object
  SafeAreaDTO:
    properties:
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      radius:
        description: meters
        type: number
    type: object
  StudentInfoResponse:
    properties:
      address:
        type: string
      attendance_summary:
        allOf:
        - $ref: '#/definitions/AttendanceSummary'
        description: Meta info
      attendances:
        items:
          $ref: '#/definitions/models.Attendance'
        type: array
      birth_date:
        type: string
      class:
        allOf:
        - $ref: '#/definitions/models.Class'
        description: Optional relations
      entry_year:
        type: integer
      father_name:
        type: string
      fullname:
        type: string
      gender:
        type: string
      id:
        description: Basic student info
        type: string
      mother_name:
        type: string
      nis:
        type: string
      nisn:
        type: string
      phone:
        type: string
      photo_profile:
        type: string
      place_of_birth:
        type: string
      religion:
        type: string
      status:
        type: string
    type: object
  SuccessAPIResponse:
    properties:
      data: {}
      meta:
        properties:
          message:
            example: Success
            type: string
          status:
            example: 200
            type: integer
        type: object
    type: object
  SuccessOnlyAPIResponse:
    properties:
      meta:
        properties:
          message:
            example: Operation successful
            type: string
          status:
            example: 200
            type: integer
        type: object
    type: object
  UnauthorizedAPIResponse:
    properties:
      meta:
        properties:
          message:
            example: Unauthorized access
            type: string
          status:
            example: 401
            type: integer
        type: object
    type: object
  config.HealthResponse:
    properties:
      database:
        example: connected
        type: string
      redis:
        example: connected
        type: string
      status:
        example: healthy
        type: string
      timestamp:
        example: "2024-01-01T12:00:00Z"
        type: string
    type: object
  config.RootResponse:
    properties:
      env:
        example: dev
        type: string
      message:
        example: Presensi SMK API is running!
        type: string
      status:
        example: success
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  models.Attendance:
    properties:
      check_in_latitude:
        description: Check-in data
        type: number
      check_in_longitude:
        type: number
      check_in_note:
        type: string
      check_in_photo:
        type: string
      check_in_status:
        type: string
      check_in_time:
        type: string
      check_out_latitude:
        description: Check-out data
        type: number
      check_out_longitude:
        type: number
      check_out_note:
        type: string
      check_out_photo:
        type: string
      check_out_status:
        type: string
      check_out_time:
        type: string
      created_at:
        type: string
      date:
        type: string
      id:
        type: string
      student:
        allOf:
        - $ref: '#/definitions/models.Student'
        description: Relations
      student_id:
        type: string
      updated_at:
        type: string
    type: object
  models.AttendanceSettings:
    properties:
      check_in_end:
        type: string
      check_in_start:
        type: string
      check_out_end:
        type: string
      check_out_start:
        type: string
      created_at:
        type: string
      id:
        type: string
      late_tolerance:
        type: integer
      max_distance:
        type: integer
      require_location:
        type: boolean
      require_photo:
        type: boolean
      school:
        allOf:
        - $ref: '#/definitions/models.School'
        description: Relations
      school_id:
        type: string
      updated_at:
        type: string
    type: object
  models.Class:
    properties:
      academic_year:
        type: string
      class_schedules:
        items:
          $ref: '#/definitions/models.ClassSchedule'
        type: array
      created_at:
        type: string
      grade:
        type: string
      homeroom_teacher:
        $ref: '#/definitions/models.Teacher'
      homeroom_teacher_id:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      major:
        type: string
      name:
        type: string
      school:
        allOf:
        - $ref: '#/definitions/models.School'
        description: Relations
      school_id:
        type: string
      students:
        items:
          $ref: '#/definitions/models.Student'
        type: array
      updated_at:
        type: string
    type: object
  models.ClassSchedule:
    properties:
      academic_year:
        type: string
      class:
        allOf:
        - $ref: '#/definitions/models.Class'
        description: Relations
      class_id:
        type: string
      created_at:
        type: string
      day_of_week:
        type: string
      end_time:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      room:
        type: string
      semester:
        type: string
      start_time:
        type: string
      subject:
        $ref: '#/definitions/models.Subject'
      subject_id:
        type: string
      teacher:
        $ref: '#/definitions/models.Teacher'
      teacher_id:
        type: string
      updated_at:
        type: string
    type: object
  models.Holiday:
    properties:
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      school:
        allOf:
        - $ref: '#/definitions/models.School'
        description: Relations
      school_id:
        type: string
      start_date:
        type: string
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  models.SafeArea:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      radius:
        type: number
      school:
        allOf:
        - $ref: '#/definitions/models.School'
        description: Relations
      school_id:
        type: string
      updated_at:
        type: string
    type: object
  models.School:
    properties:
      address:
        type: string
      attendance_settings:
        $ref: '#/definitions/models.AttendanceSettings'
      classes:
        description: Relations
        items:
          $ref: '#/definitions/models.Class'
        type: array
      created_at:
        type: string
      email:
        type: string
      holidays:
        items:
          $ref: '#/definitions/models.Holiday'
        type: array
      id:
        type: string
      is_active:
        type: boolean
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      npsn:
        type: string
      phone:
        type: string
      principal:
        type: string
      safe_areas:
        items:
          $ref: '#/definitions/models.SafeArea'
        type: array
      subjects:
        items:
          $ref: '#/definitions/models.Subject'
        type: array
      teachers:
        items:
          $ref: '#/definitions/models.Teacher'
        type: array
      updated_at:
        type: string
      website:
        type: string
    type: object
  models.Student:
    properties:
      address:
        type: string
      attendances:
        items:
          $ref: '#/definitions/models.Attendance'
        type: array
      birth_date:
        type: string
      class:
        allOf:
        - $ref: '#/definitions/models.Class'
        description: Relations
      class_id:
        type: string
      created_at:
        type: string
      entry_year:
        type: integer
      father_name:
        description: Parent Information
        type: string
      fullname:
        type: string
      gender:
        type: string
      id:
        type: string
      mother_name:
        type: string
      nis:
        type: string
      nisn:
        type: string
      phone:
        type: string
      photo_profile:
        type: string
      place_of_birth:
        type: string
      religion:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.Subject:
    properties:
      class_schedules:
        items:
          $ref: '#/definitions/models.ClassSchedule'
        type: array
      code:
        type: string
      created_at:
        type: string
      credit_hours:
        type: integer
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      school:
        allOf:
        - $ref: '#/definitions/models.School'
        description: Relations
      school_id:
        type: string
      updated_at:
        type: string
    type: object
  models.Teacher:
    properties:
      birth_date:
        type: string
      class_schedules:
        items:
          $ref: '#/definitions/models.ClassSchedule'
        type: array
      classes_as_wali:
        items:
          $ref: '#/definitions/models.Class'
        type: array
      created_at:
        type: string
      email:
        type: string
      fullname:
        type: string
      gender:
        type: string
      id:
        type: string
      nuptk:
        type: string
      phone:
        type: string
      photo_profile:
        type: string
      place_of_birth:
        type: string
      position_type:
        type: string
      school:
        allOf:
        - $ref: '#/definitions/models.School'
        description: Relations
      school_id:
        type: string
      status:
        type: string
      teacher_code:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
  description: Ini adalah API untuk ujikom mif 2025
  termsOfService: http://swagger.io/terms/
  title: UJIKOM API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: Returns basic information about the API including status, version,
        and environment
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.RootResponse'
      summary: Get API Information
      tags:
      - System
  /student/login:
    post:
      consumes:
      - application/json
      description: Authenticate student dengan NISN dan password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/LoginSuccessResponse'
        "400":
          description: Bad request - invalid input
          schema:
            $ref: '#/definitions/BadRequestAPIResponse'
        "401":
          description: Unauthorized - invalid credentials
          schema:
            $ref: '#/definitions/UnauthorizedAPIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerErrorAPIResponse'
      security:
      - ApiKeyAuth: []
      summary: Student Login
      tags:
      - Auth
  /student/logout:
    post:
      consumes:
      - application/json
      description: Logout student dan hapus session yang aktif
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/SuccessOnlyAPIResponse'
        "401":
          description: Unauthorized - invalid or expired token
          schema:
            $ref: '#/definitions/UnauthorizedAPIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/InternalServerErrorAPIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Student Logout
      tags:
      - Auth
  /ujikom/api/attendance/rules:
    get:
      consumes:
      - application/json
      description: Get attendance settings, safe areas, and current attendance status
        for student
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/SuccessAPIResponse'
            - properties:
                data:
                  $ref: '#/definitions/AttendanceRulesResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedAPIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/NotFoundAPIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerErrorAPIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get Attendance Rules and Safe Areas
      tags:
      - Attendance
  /ujikom/api/health:
    get:
      consumes:
      - application/json
      description: Returns the health status of the API including database and Redis
        connectivity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.HealthResponse'
      summary: Health Check
      tags:
      - System
  /ujikom/api/student/info:
    get:
      consumes:
      - application/json
      description: Get student information with optional relations (class, attendance,
        schedule)
      parameters:
      - description: Include class information
        in: query
        name: class
        type: boolean
      - description: Include attendance information
        in: query
        name: absen
        type: boolean
      - description: Include schedule information
        in: query
        name: schedule
        type: boolean
      - description: 'Filter attendance by month (format: 2024-01)'
        in: query
        name: month
        type: string
      - description: 'Attendance records limit (default: 10, max: 50)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/SuccessAPIResponse'
            - properties:
                data:
                  $ref: '#/definitions/StudentInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestAPIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedAPIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/NotFoundAPIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerErrorAPIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get Student Information
      tags:
      - Student
swagger: "2.0"
