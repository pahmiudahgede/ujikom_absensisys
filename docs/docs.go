// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Returns basic information about the API including status, version, and environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get API Information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.RootResponse"
                        }
                    }
                }
            }
        },
        "/student/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Authenticate student dengan NISN dan password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Student Login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/BadRequestAPIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/student/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout student dan hapus session yang aktif",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Student Logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "$ref": "#/definitions/SuccessOnlyAPIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or expired token",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/ujikom/api/attendance/rules": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get attendance settings, safe areas, and current attendance status for student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Attendance Rules and Safe Areas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/SuccessAPIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/AttendanceRulesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/ujikom/api/health": {
            "get": {
                "description": "Returns the health status of the API including database and Redis connectivity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.HealthResponse"
                        }
                    }
                }
            }
        },
        "/ujikom/api/student/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get student information with optional relations (class, attendance, schedule)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get Student Information",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include class information",
                        "name": "class",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include attendance information",
                        "name": "absen",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include schedule information",
                        "name": "schedule",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter attendance by month (format: 2024-01)",
                        "name": "month",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Attendance records limit (default: 10, max: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/SuccessAPIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/StudentInfoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/BadRequestAPIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedAPIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorAPIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AttendanceRulesResponse": {
            "type": "object",
            "properties": {
                "can_check_in": {
                    "type": "boolean"
                },
                "can_check_out": {
                    "type": "boolean"
                },
                "current_time": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "safe_areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SafeAreaDTO"
                    }
                },
                "settings": {
                    "$ref": "#/definitions/AttendanceSettingsDTO"
                },
                "status": {
                    "description": "\"before_checkin\", \"checkin_time\", \"between\", \"checkout_time\", \"after_checkout\"",
                    "type": "string"
                }
            }
        },
        "AttendanceSettingsDTO": {
            "type": "object",
            "properties": {
                "check_in_end": {
                    "description": "\"08:00\"",
                    "type": "string"
                },
                "check_in_start": {
                    "description": "\"07:00\"",
                    "type": "string"
                },
                "check_out_end": {
                    "description": "\"17:00\"",
                    "type": "string"
                },
                "check_out_start": {
                    "description": "\"15:00\"",
                    "type": "string"
                },
                "late_tolerance": {
                    "description": "minutes",
                    "type": "integer"
                },
                "max_distance": {
                    "description": "meters",
                    "type": "integer"
                },
                "require_location": {
                    "type": "boolean"
                },
                "require_photo": {
                    "type": "boolean"
                }
            }
        },
        "AttendanceSummary": {
            "type": "object",
            "properties": {
                "absent_days": {
                    "type": "integer"
                },
                "attendance_rate": {
                    "type": "number"
                },
                "current_month": {
                    "type": "string"
                },
                "late_days": {
                    "type": "integer"
                },
                "present_days": {
                    "type": "integer"
                },
                "total_days": {
                    "type": "integer"
                }
            }
        },
        "BadRequestAPIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Bad request"
                        },
                        "status": {
                            "type": "integer",
                            "example": 400
                        }
                    }
                }
            }
        },
        "InternalServerErrorAPIResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Internal server error"
                        },
                        "status": {
                            "type": "integer",
                            "example": 500
                        }
                    }
                }
            }
        },
        "LoginRequest": {
            "type": "object",
            "required": [
                "nisn",
                "password"
            ],
            "properties": {
                "deviceinfo": {
                    "type": "string",
                    "example": "postmanstudent123x0=="
                },
                "nisn": {
                    "type": "string",
                    "example": "2024000579"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "LoginSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "access_token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "created_at": {
                            "type": "string",
                            "example": "0001-01-01T00:00:00Z"
                        },
                        "device_info": {
                            "type": "string",
                            "example": "postmanstudent123x0=="
                        },
                        "last_activity": {
                            "type": "string",
                            "example": "0001-01-01T00:00:00Z"
                        },
                        "name": {
                            "type": "string",
                            "example": "Eko Saputra"
                        },
                        "nisn": {
                            "type": "string",
                            "example": "2024000579"
                        },
                        "session_id": {
                            "type": "string",
                            "example": "b5e882d0eb21c5ba7752d2b8f216ccad"
                        },
                        "user_id": {
                            "type": "string",
                            "example": "003061ee-97ff-4d00-8155-f4bf15e319dd"
                        }
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "login success"
                        },
                        "status": {
                            "type": "integer",
                            "example": 200
                        }
                    }
                }
            }
        },
        "NotFoundAPIResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Resource not found"
                        },
                        "status": {
                            "type": "integer",
                            "example": 404
                        }
                    }
                }
            }
        },
        "SafeAreaDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "radius": {
                    "description": "meters",
                    "type": "number"
                }
            }
        },
        "StudentInfoResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "attendance_summary": {
                    "description": "Meta info",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AttendanceSummary"
                        }
                    ]
                },
                "attendances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attendance"
                    }
                },
                "birth_date": {
                    "type": "string"
                },
                "class": {
                    "description": "Optional relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Class"
                        }
                    ]
                },
                "entry_year": {
                    "type": "integer"
                },
                "father_name": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "description": "Basic student info",
                    "type": "string"
                },
                "mother_name": {
                    "type": "string"
                },
                "nis": {
                    "type": "string"
                },
                "nisn": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "photo_profile": {
                    "type": "string"
                },
                "place_of_birth": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "SuccessAPIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Success"
                        },
                        "status": {
                            "type": "integer",
                            "example": 200
                        }
                    }
                }
            }
        },
        "SuccessOnlyAPIResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Operation successful"
                        },
                        "status": {
                            "type": "integer",
                            "example": 200
                        }
                    }
                }
            }
        },
        "UnauthorizedAPIResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Unauthorized access"
                        },
                        "status": {
                            "type": "integer",
                            "example": 401
                        }
                    }
                }
            }
        },
        "config.HealthResponse": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "example": "connected"
                },
                "redis": {
                    "type": "string",
                    "example": "connected"
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                }
            }
        },
        "config.RootResponse": {
            "type": "object",
            "properties": {
                "env": {
                    "type": "string",
                    "example": "dev"
                },
                "message": {
                    "type": "string",
                    "example": "Presensi SMK API is running!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "models.Attendance": {
            "type": "object",
            "properties": {
                "check_in_latitude": {
                    "description": "Check-in data",
                    "type": "number"
                },
                "check_in_longitude": {
                    "type": "number"
                },
                "check_in_note": {
                    "type": "string"
                },
                "check_in_photo": {
                    "type": "string"
                },
                "check_in_status": {
                    "type": "string"
                },
                "check_in_time": {
                    "type": "string"
                },
                "check_out_latitude": {
                    "description": "Check-out data",
                    "type": "number"
                },
                "check_out_longitude": {
                    "type": "number"
                },
                "check_out_note": {
                    "type": "string"
                },
                "check_out_photo": {
                    "type": "string"
                },
                "check_out_status": {
                    "type": "string"
                },
                "check_out_time": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "student": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Student"
                        }
                    ]
                },
                "student_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.AttendanceSettings": {
            "type": "object",
            "properties": {
                "check_in_end": {
                    "type": "string"
                },
                "check_in_start": {
                    "type": "string"
                },
                "check_out_end": {
                    "type": "string"
                },
                "check_out_start": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "late_tolerance": {
                    "type": "integer"
                },
                "max_distance": {
                    "type": "integer"
                },
                "require_location": {
                    "type": "boolean"
                },
                "require_photo": {
                    "type": "boolean"
                },
                "school": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.School"
                        }
                    ]
                },
                "school_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Class": {
            "type": "object",
            "properties": {
                "academic_year": {
                    "type": "string"
                },
                "class_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClassSchedule"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "grade": {
                    "type": "string"
                },
                "homeroom_teacher": {
                    "$ref": "#/definitions/models.Teacher"
                },
                "homeroom_teacher_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "major": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "school": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.School"
                        }
                    ]
                },
                "school_id": {
                    "type": "string"
                },
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Student"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ClassSchedule": {
            "type": "object",
            "properties": {
                "academic_year": {
                    "type": "string"
                },
                "class": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Class"
                        }
                    ]
                },
                "class_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "day_of_week": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "room": {
                    "type": "string"
                },
                "semester": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "subject": {
                    "$ref": "#/definitions/models.Subject"
                },
                "subject_id": {
                    "type": "string"
                },
                "teacher": {
                    "$ref": "#/definitions/models.Teacher"
                },
                "teacher_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Holiday": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "school": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.School"
                        }
                    ]
                },
                "school_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SafeArea": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "radius": {
                    "type": "number"
                },
                "school": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.School"
                        }
                    ]
                },
                "school_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.School": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "attendance_settings": {
                    "$ref": "#/definitions/models.AttendanceSettings"
                },
                "classes": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Class"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "holidays": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Holiday"
                    }
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "npsn": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "principal": {
                    "type": "string"
                },
                "safe_areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SafeArea"
                    }
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Subject"
                    }
                },
                "teachers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Teacher"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.Student": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "attendances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attendance"
                    }
                },
                "birth_date": {
                    "type": "string"
                },
                "class": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Class"
                        }
                    ]
                },
                "class_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "entry_year": {
                    "type": "integer"
                },
                "father_name": {
                    "description": "Parent Information",
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mother_name": {
                    "type": "string"
                },
                "nis": {
                    "type": "string"
                },
                "nisn": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "photo_profile": {
                    "type": "string"
                },
                "place_of_birth": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Subject": {
            "type": "object",
            "properties": {
                "class_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClassSchedule"
                    }
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "credit_hours": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "school": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.School"
                        }
                    ]
                },
                "school_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Teacher": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "class_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClassSchedule"
                    }
                },
                "classes_as_wali": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Class"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nuptk": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "photo_profile": {
                    "type": "string"
                },
                "place_of_birth": {
                    "type": "string"
                },
                "position_type": {
                    "type": "string"
                },
                "school": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.School"
                        }
                    ]
                },
                "school_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "teacher_code": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "UJIKOM API",
	Description:      "Ini adalah API untuk ujikom mif 2025",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
